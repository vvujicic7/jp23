/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel.view;

import hotel.controller.ObradaDjelatnik;
import hotel.model.Djelatnik;
import java.awt.event.KeyEvent;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.swing.JComponent;
import javax.swing.JOptionPane;

/**
 *
 * @author Mativel
 */
public class Autorizacija extends javax.swing.JFrame {

    /**
     * Creates new form Autorizacija
     */
    public Autorizacija() {
        initComponents();
        setTitle(Aplikacija.NASLOV_APP);
        txtEmail.setText("velimir.vujicic@hotmail.com");
        pasLozinka.setText("edunova");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        lblLozinka = new javax.swing.JLabel();
        pasLozinka = new javax.swing.JPasswordField();
        btnPrijava = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AutorizacijaHotel.png"))); // NOI18N

        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });

        lblEmail.setText("Email");

        lblLozinka.setText("Lozinka");

        pasLozinka.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pasLozinkaKeyReleased(evt);
            }
        });

        btnPrijava.setText("Prijava");
        btnPrijava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrijavaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblLozinka)
                    .addComponent(lblEmail)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail)
                    .addComponent(pasLozinka)
                    .addComponent(btnPrijava, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblLozinka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pasLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPrijava, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_ENTER
                && !txtEmail.getText().isEmpty()) {
            pasLozinka.requestFocus();
        }
    }//GEN-LAST:event_txtEmailKeyReleased

    private void pasLozinkaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pasLozinkaKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_ENTER &&
                pasLozinka.getPassword().length>0) {
            prijaviSe();
        }
    }//GEN-LAST:event_pasLozinkaKeyReleased

    private void btnPrijavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrijavaActionPerformed
        prijaviSe();
    }//GEN-LAST:event_btnPrijavaActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrijava;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblLozinka;
    private javax.swing.JPasswordField pasLozinka;
    private javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables

private void prijaviSe() {
        
        // u view radim kontrole
        
        if(txtEmail.getText().isEmpty()){
            obradiGresku(txtEmail, "Obavezno email");
         //   JOptionPane.showMessageDialog(rootPane, "Obavezno email");
         //   txtEmail.requestFocus();
            return;
        }
        
        try {
            InternetAddress email=new InternetAddress(txtEmail.getText());
            email.validate();
        } catch (AddressException e) {
            obradiGresku(txtEmail, "Email nije ispravan");
            //JOptionPane.showMessageDialog(rootPane, "Email nije ispravan");
           // txtEmail.requestFocus();
            return;
        }
        
      
        if(pasLozinka.getPassword().length==0){
            obradiGresku(pasLozinka, "Obavezno lozinka");
           // JOptionPane.showMessageDialog(rootPane, "Obavezno lozinka");
          //  pswLozinka.requestFocus();
            return;
        }
        
        // znam kako je postavljen email i loznika
        ObradaDjelatnik oo = new ObradaDjelatnik();
        Djelatnik o = oo.autoriziraj(txtEmail.getText(), pasLozinka.getPassword());
        
        if(o==null){
            obradiGresku(pasLozinka, "Email i lozinka ne odgovaraju");
            return;
        }
        // imamo problem primjene objekta pod ingerencijom Hibernate
        // jer automatski sprema u bazu -  it will be saved automatically.
        // https://stackoverflow.com/questions/30955910/if-i-modify-a-hibernate-entity-after-doing-a-save-when-i-commit-would-the-chan
        //o.setLozinka(null);
        Aplikacija.djelatnik=o;
        new Izbornik().setVisible(true);
        dispose();
        
    }
    
    private void obradiGresku(JComponent komponenta, String poruka){
        komponenta.requestFocus();
        JOptionPane.showMessageDialog(rootPane, poruka);
    }
}
